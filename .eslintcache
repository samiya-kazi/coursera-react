[{"C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\index.js":"1","C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\App.js":"2","C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\reportWebVitals.js":"3","C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\redux\\configureStore.js":"4","C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\components\\MainComponent.js":"5","C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\components\\MenuComponent.js":"6","C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\components\\FooterComponent.js":"7","C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\components\\DishDetailComponent.js":"8","C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\components\\HomeComponent.js":"9","C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\components\\ContactComponent.js":"10","C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\components\\HeaderComponent.js":"11","C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\components\\AboutComponent.js":"12","C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\shared\\promotions.js":"13","C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\shared\\comments.js":"14","C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\shared\\leaders.js":"15","C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\shared\\dishes.js":"16","C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\redux\\comments.js":"17","C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\redux\\dishes.js":"18","C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\redux\\promotions.js":"19","C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\redux\\leaders.js":"20"},{"size":643,"mtime":1611994906354,"results":"21","hashOfConfig":"22"},{"size":543,"mtime":1612264187969,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":427,"mtime":1612773628914,"results":"25","hashOfConfig":"22"},{"size":2114,"mtime":1612263726373,"results":"26","hashOfConfig":"22"},{"size":1519,"mtime":1612089759959,"results":"27","hashOfConfig":"22"},{"size":2804,"mtime":1612008102237,"results":"28","hashOfConfig":"22"},{"size":6429,"mtime":1612345933352,"results":"29","hashOfConfig":"22"},{"size":956,"mtime":1612088638489,"results":"30","hashOfConfig":"22"},{"size":11024,"mtime":1612334774551,"results":"31","hashOfConfig":"22"},{"size":4231,"mtime":1612177544454,"results":"32","hashOfConfig":"22"},{"size":4239,"mtime":1612093467462,"results":"33","hashOfConfig":"22"},{"size":435,"mtime":1612087113843,"results":"34","hashOfConfig":"22"},{"size":4117,"mtime":1612087150919,"results":"35","hashOfConfig":"22"},{"size":2345,"mtime":1612087137762,"results":"36","hashOfConfig":"22"},{"size":1448,"mtime":1612087075670,"results":"37","hashOfConfig":"22"},{"size":166,"mtime":1612773275995,"results":"38","hashOfConfig":"22"},{"size":160,"mtime":1612773242011,"results":"39","hashOfConfig":"22"},{"size":176,"mtime":1612773319698,"results":"40","hashOfConfig":"22"},{"size":164,"mtime":1612773366309,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"2vthqb",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\index.js",[],["87","88"],"C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\App.js",[],"C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\reportWebVitals.js",[],"C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\redux\\configureStore.js",[],"C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\components\\MainComponent.js",["89"],"import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishDetailComponent';\r\nimport Contact from './ContactComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n    \r\n}\r\n\r\n\r\nclass Main extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const HomePage = () => {\r\n      return (\r\n        <Home dish={this.props.dishes.filter((dish) => dish.featured)[0]}\r\n          promotion={this.props.promotions.filter((promo) => promo.featured)[0]}\r\n          leader={this.props.leaders.filter((leader) => leader.featured)[0]}\r\n         />\r\n      );\r\n    }\r\n\r\n\r\n    const AboutPage = () => {\r\n      return (\r\n        <About leaders={this.props.leaders} />\r\n      );\r\n    }\r\n\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n          <DishDetail dish={this.props.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \r\n            comments={this.props.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))} />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"container\">\r\n        <Header/>\r\n        <Switch>\r\n          <Route path=\"/home\" component={HomePage} />\r\n          <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n          <Route exact path=\"/contactus\" component={Contact} />\r\n          <Route exact path=\"/aboutus\" component={AboutPage} />\r\n          <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n          <Redirect to=\"/home\" />\r\n        </Switch>\r\n        <Footer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Main));\r\n","C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\components\\MenuComponent.js",[],"C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\components\\FooterComponent.js",[],"C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\components\\DishDetailComponent.js",["90","91","92"],"import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, \r\n    Button, Modal, ModalHeader, ModalBody, Label, Row, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\n\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state={\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\r\n                </Button>\r\n\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Label htmlFor=\"rating\">Rating</Label>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={12} >\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={12}>\r\n                                    <Label htmlFor=\"author\">Your Name</Label>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Your Name\"\r\n                                        validators={{\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15)\r\n                                        }} />    \r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            minLength: 'Must be greater than 2 characters. ',\r\n                                            maxLength: 'Must be 15 characters or less. '\r\n                                        }} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={12}>\r\n                                    <Label htmlFor=\"comment\">Comment</Label>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\"></Control.textarea>\r\n                                </Col>\r\n                            </Row>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction RenderDish({dish}) {\r\n    if (dish != null)\r\n        return(\r\n            <Card>\r\n                <CardImg top src={dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                  <CardTitle>{dish.name}</CardTitle>\r\n                  <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    else\r\n        return(\r\n            <div></div>\r\n        );\r\n}\r\n\r\n\r\n\r\nfunction RenderComments({comments}) {\r\n    if (comments != null) {\r\n            const com = comments.map((comment) => {\r\n                return(\r\n                    <li>\r\n                        <p>{comment.comment}</p>\r\n                        <p>--{comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                    </li>\r\n                );\r\n            })\r\n            return (\r\n                <div>\r\n                    <h4>Comments</h4>\r\n                    <ul className=\"list-unstyled\">\r\n                        {com}\r\n                    </ul>\r\n                    <CommentForm />\r\n                </div>\r\n            );\r\n    } else\r\n        return (\r\n            <div></div>\r\n        );\r\n}\r\n\r\n\r\nfunction DishDetail(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>{props.dish.name}</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <RenderDish dish={props.dish} />\r\n                </div>\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <RenderComments comments={props.comments} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DishDetail;","C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\components\\HomeComponent.js",[],"C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\components\\ContactComponent.js",["93","94","95","96","97","98","99","100"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n    }\r\n\r\n\r\n     render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"First Name\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15)\r\n                                        }} />\r\n\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters. ',\r\n                                            maxLength: 'Must be 15 characters or less. '\r\n                                        }}/>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Last Name\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15)\r\n                                        }} />\r\n\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters. ',\r\n                                            maxLength: 'Must be 15 characters or less.'\r\n                                        }}/>\r\n                                </Col>                        \r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Tel. number\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15),\r\n                                            isNumber\r\n                                        }} />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 numbers. ',\r\n                                            maxLength: 'Must be 15 numbers or less. ',\r\n                                            isNumber: 'Must be a number.'\r\n                                        }}/>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }} />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            validEmail: 'Invalid email address'\r\n                                        }}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\"\r\n                                                name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                            className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\"></Control.textarea>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Contact;","C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\components\\HeaderComponent.js",[],"C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\components\\AboutComponent.js",[],"C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\shared\\promotions.js",[],["101","102"],"C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\shared\\comments.js",[],"C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\shared\\leaders.js",[],"C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\shared\\dishes.js",[],"C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\redux\\comments.js",[],"C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\redux\\dishes.js",[],"C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\redux\\promotions.js",[],"C:\\Users\\Basic\\Documents\\Coursera\\coursera-react\\src\\redux\\leaders.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":24,"column":3,"nodeType":"109","messageId":"110","endLine":26,"endColumn":4},{"ruleId":"111","severity":1,"message":"112","line":50,"column":37,"nodeType":"113","endLine":51,"endColumn":66},{"ruleId":"111","severity":1,"message":"114","line":63,"column":37,"nodeType":"113","endLine":69,"endColumn":46},{"ruleId":"111","severity":1,"message":"115","line":83,"column":37,"nodeType":"113","endLine":85,"endColumn":66},{"ruleId":"116","severity":1,"message":"117","line":62,"column":29,"nodeType":"113","endLine":62,"endColumn":71},{"ruleId":"111","severity":1,"message":"114","line":76,"column":37,"nodeType":"113","endLine":83,"endColumn":46},{"ruleId":"111","severity":1,"message":"114","line":100,"column":37,"nodeType":"113","endLine":107,"endColumn":46},{"ruleId":"111","severity":1,"message":"114","line":124,"column":37,"nodeType":"113","endLine":132,"endColumn":46},{"ruleId":"111","severity":1,"message":"114","line":149,"column":37,"nodeType":"113","endLine":154,"endColumn":46},{"ruleId":"111","severity":1,"message":"118","line":169,"column":45,"nodeType":"113","endLine":172,"endColumn":52},{"ruleId":"111","severity":1,"message":"112","line":178,"column":37,"nodeType":"113","endLine":179,"endColumn":70},{"ruleId":"111","severity":1,"message":"115","line":188,"column":37,"nodeType":"113","endLine":190,"endColumn":66},{"ruleId":"103","replacedBy":"119"},{"ruleId":"105","replacedBy":"120"},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["121"],["122"],"no-global-assign","no-unsafe-negation"]